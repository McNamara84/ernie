version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: ernie:latest
    container_name: ${APP_NAME:-laravel-app}_app
    restart: unless-stopped
    working_dir: /var/www/html
    env_file:
      - .env.production
    volumes:
      - ./storage/app:/var/www/html/storage/app
      - ./storage/logs:/var/www/html/storage/logs
    networks:
      - app-network
    depends_on:
      - mariadb
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: ${APP_NAME:-laravel-app}_nginx
    restart: unless-stopped
    ports:
      - "${APP_PORT:-80}:80"
      - "${APP_SSL_PORT:-443}:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/sites:/etc/nginx/conf.d:ro
      - ./public:/var/www/html/public:ro
      - ./storage/app/public:/var/www/html/storage/app/public:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mariadb:
    image: mariadb:11.2
    container_name: ${APP_NAME:-laravel-app}_mariadb
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_CHARACTER_SET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./docker/mariadb/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    ports:
      - "${DB_PORT:-3306}:3306"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: ${APP_NAME:-laravel-app}_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  queue:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: ${APP_NAME:-laravel-app}:latest
    container_name: ${APP_NAME:-laravel-app}_queue
    restart: unless-stopped
    working_dir: /var/www/html
    env_file:
      - .env.production
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    volumes:
      - ./storage/app:/var/www/html/storage/app
      - ./storage/logs:/var/www/html/storage/logs
    depends_on:
      - mariadb
      - redis
    networks:
      - app-network

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: ${APP_NAME:-laravel-app}:latest
    container_name: ${APP_NAME:-laravel-app}_scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    env_file:
      - .env.production
    command: /bin/sh -c "while true; do php artisan schedule:run --verbose --no-interaction & sleep 60; done"
    volumes:
      - ./storage/app:/var/www/html/storage/app
      - ./storage/logs:/var/www/html/storage/logs
    depends_on:
      - mariadb
      - redis
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mariadb_data:
    driver: local
  redis_data:
    driver: local